---
description: タスク実行時、軽度な課題に直面した際に適用されるルール
globs: 
alwaysApply: false
---
# Project Issues

## 目的

このプロジェクトでのタスク実行時、軽度な課題・懸念が発見された場合に実行される内容です。
下記条件に従って処理してください。

## 課題管理の目的

このプロジェクトでの課題を体系的に管理するための仕組みです。以下のような場合に課題として記録します：

- タスク完了できない程ではないが、長期的に見て解決したほうがよい問題を抱えている場合。
- 動作上問題はないが、一般的な方法とは異なる方法で実装・設計がされている場合。
- 技術的負債となりうる実装や設計上の懸念がある場合。
- その他、クリティカルではない課題や今後の懸念などをマークする。

## 課題記録の手順と制約

- 各タスク実行時、課題や懸念を発見した場合、`docs/ai/issues/{YYYYmmdd}_{課題名}.md`を作成する。
  - YYYYmmddには日付を入力すること。
  - 日付は`date`コマンドを実行して日時情報を取得すること。
  - 課題名は簡潔かつ内容を表す名前にすること。
- このファイルには以下の内容を記載する。
  - 課題名
  - 課題内容（問題の詳細な説明）
  - 解決案（複数可）
  - 優先レベル：高中低（色分けをすること）
  - 想定される影響範囲
  - 関連ファイルやコード
- ファイル作成後、`docs/ai/issues/index.md`にインデックスを作成すること。
  - 対応状況：未対応・対応中・完了
  - `docs/ai/issues/{YYYYmmdd}_{課題名}.md`へのリンク
  - 課題記入日
  - 優先レベル
  - 簡潔な課題の説明（一行程度）
- 既に同じ課題が登録済みで、まだ完了になっていない場合はこの処理は全て無視すること。
- また、似たような課題がある場合は関連付けをすること。

## 出力サンプル

### 課題ファイルのサンプル（20240520_component_naming_inconsistency.md）

```markdown
# コンポーネント命名の不一致

## 課題内容
プロジェクト内のReactコンポーネントの命名規則に一貫性がありません。一部のコンポーネントはPascalCase（例：ButtonComponent）、
他のコンポーネントはキャメルケース（例：buttonComponent）で命名されています。
これにより、コードの可読性が低下し、新規開発者の混乱を招く可能性があります。

## 解決案
1. **命名規則の統一**：すべてのコンポーネント名をPascalCaseに統一する
2. **スタイルガイドの作成**：プロジェクト全体の命名規則を文書化する
3. **自動リンターの導入**：命名規則違反を自動検出するESLintルールを追加する

## 優先レベル
**🟡 中**（短期的な機能に影響はないが、長期的なコードのメンテナンス性に影響するため）

## 想定される影響範囲
- `components/` ディレクトリ内のすべてのファイル
- これらのコンポーネントを参照している他のファイル

## 関連ファイル
- components/ButtonComponent.tsx
- components/cardList.tsx
- components/UserProfile.tsx
- components/navigationBar.tsx
```

### インデックスファイルのサンプル（issues.md）

```markdown
# プロジェクト課題インデックス

| 課題ID | 課題名 | 優先レベル | 状態 | 記入日 | 概要 |
|--------|--------|------------|------|--------|------|
| [20240520_component_naming_inconsistency](mdc:20240520_component_naming_inconsistency.md) | コンポーネント命名の不一致 | 🟡 中 | 未対応 | 2024-05-20 | コンポーネント命名規則の不一致による可読性低下 |
| [20240518_unused_dependencies](mdc:20240518_unused_dependencies.md) | 未使用依存関係 | 🟢 低 | 対応中 | 2024-05-18 | package.jsonに未使用のnpmパッケージが多数存在 |
| [20240515_css_duplication](mdc:20240515_css_duplication.md) | CSSの重複 | 🔴 高 | 完了 | 2024-05-15 | 複数のCSSファイルに同じスタイルが重複定義されている |

## 関連する課題グループ

### UI関連の課題
- [20240520_component_naming_inconsistency](mdc:20240520_component_naming_inconsistency.md)
- [20240515_css_duplication](mdc:20240515_css_duplication.md)

### パフォーマンス関連の課題
- [20240518_unused_dependencies](mdc:20240518_unused_dependencies.md)